/*
 * Created on 2018-09-20 ( Time 12:34:31 )
 * Generated by Telosys Tools Generator ( version 3.0.0 )
 */

package com.heroku.services;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.heroku.entities.Progress;
import com.heroku.exceptions.ProgressNotFoundException;
import com.heroku.repository.ProgressRepository;

@Service
@Transactional(rollbackFor=ProgressNotFoundException.class)
public class ProgressService 
{
	private static Logger logger = LoggerFactory.getLogger(ProgressService.class);
	
	@Autowired
	private ProgressRepository progressRepository;
		
	/*
	 * READ methods
	 */
	public Page<Progress> findAll(int page, int count) {
		
		if (logger.isDebugEnabled())
			logger.debug("ProgressService -> findAll Progresss");
		
		return progressRepository.findAll(PageRequest.of(page, count));
	}

	public Iterable<Progress> findAll() {
		
		if (logger.isDebugEnabled())
			logger.debug("ProgressService -> findAll Progresss");
		
		return progressRepository.findAll();
	}

	public Iterable<Progress> findByOwner(String owner){
		if (logger.isDebugEnabled())
			logger.debug("Retrieving Progress for owner:" + owner);
		
		return progressRepository.findByOwner(owner);
		
	}


}


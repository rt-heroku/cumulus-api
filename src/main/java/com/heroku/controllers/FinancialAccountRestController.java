/*
 * Created on 2018-09-24 ( Time 11:58:14 )
 * Generated by Telosys Tools Generator ( version 3.0.0 )
 */

package com.heroku.controllers;

import javax.servlet.http.HttpServletResponse;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.heroku.model.ResponseMessage;
import com.heroku.services.FinancialAccountService;

@CrossOrigin
@Controller
@RequestMapping(value="/api/v1/accounts")
public class FinancialAccountRestController {
	
	private static Logger logger = LoggerFactory.getLogger(FinancialAccountRestController.class);
	
	@Autowired
	private FinancialAccountService financialaccountService;
		
	/*
	 * READ METHODS
	 */

	@RequestMapping(value= "", method=RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
	@ResponseBody
	public ResponseMessage getAll() {

		if (logger.isDebugEnabled())
			logger.debug("FinancialAccountService -> getPage");
		
		ResponseMessage responseMessage = new ResponseMessage();
		logger.info("FinancialAccountController -> getAll", "API needs owner as a parameter");
		responseMessage.setError(-1, "API needs owner as a parameter /{owner}");
		return responseMessage;
	}

	
	@RequestMapping(value="/{owner}", method=RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
	@ResponseBody
	public ResponseMessage getAllSimpleData(@PathVariable String owner) {
		if (logger.isDebugEnabled())
			logger.debug("FinancialAccountService -> getAllSimpleData(" + owner + ")");
		ResponseMessage responseMessage = new ResponseMessage();
		
		try {
			responseMessage.setData(financialaccountService.findByOwner(owner));
		} catch (Exception e) {
			logger.error("FinancialAccountController -> create", e);
			responseMessage.setError(-1,
					"Unable to get FinancialAccount for owner: " + owner + ",Error:"  + e.getMessage());
		}
		
		return responseMessage;
	}
		
	@ExceptionHandler(Exception.class)
	public @ResponseBody
	String handleException(Exception e, HttpServletResponse response) {
	    response.setStatus(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);
	    return e.getMessage();
	}

}


/*
 * Created on 2018-09-24 ( Time 11:58:14 )
 * Generated by Telosys Tools Generator ( version 3.0.0 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.heroku.entities;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import com.fasterxml.jackson.annotation.JsonIgnore;

import java.util.Date;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "finserv__financialaccounttransaction__c"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="finserv__financialaccounttransaction__c", schema="salesforce" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="Accounttransaction.countAll", query="SELECT COUNT(x) FROM Accounttransaction x" )
} )
public class Accounttransaction implements Serializable
{
    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="id", nullable=false)
    private Long       id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    

    @Column(name="finserv__runningbalance__c")
    private Double     runningBalance ;


    @Column(name="finserv__transactionsubtype__c", length=255)
    private String     transactionSubType ;


    @Column(name="finserv__description__c", length=255)
    private String     description  ;


    @Column(name="finserv__amount__c")
    private Double     amount       ;


    @Column(name="finserv__transactionid__c", length=80)
    private String     transactionid ;


    @Column(name="name", length=80)
    private String     name         ;


    @Column(name="finserv__transactiontype__c", length=255)
    private String     transactionType ;


    @Transient
    @JsonIgnore
    @Column(name="isdeleted")
    private Boolean    isdeleted    ;


    @Transient
    @JsonIgnore
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="systemmodstamp")
    private Date       systemmodstamp ;


    @Column(name="reason_for_hold__c", length=255)
    private String     reasonForHold ;


    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="finserv__postdate__c")
    private Date       postDate     ;


    @Column(name="finserv__transactionstatus__c", length=255)
    private String     transactionStatus ;


    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="createddate")
    private Date       createddate  ;


    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="finserv__transactiondate__c")
    private Date       transactionDate ;


    @Column(name="finserv__financialaccount__c", length=18)
    private String     financialAccount ;


    @Column(name="sfid", length=18)
    private String     sfid         ;


    @Transient
    @JsonIgnore
    @Column(name="_hc_lastop", length=32)
    private String     hcLastop     ;


    @Transient
    @JsonIgnore
    @Column(name="_hc_err", length=2147483647)
    private String     hcErr        ;



    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public Accounttransaction()
    {
		super();
    }

    public Accounttransaction update(Accounttransaction a) {
		this.id = a.id;
        this.runningBalance = a.runningBalance;
        this.transactionSubType = a.transactionSubType;
        this.description = a.description;
        this.amount = a.amount;
        this.transactionid = a.transactionid;
        this.name = a.name;
        this.transactionType = a.transactionType;
        this.isdeleted = a.isdeleted;
        this.systemmodstamp = a.systemmodstamp;
        this.reasonForHold = a.reasonForHold;
        this.postDate = a.postDate;
        this.transactionStatus = a.transactionStatus;
        this.createddate = a.createddate;
        this.transactionDate = a.transactionDate;
        this.financialAccount = a.financialAccount;
        this.sfid = a.sfid;
        this.hcLastop = a.hcLastop;
        this.hcErr = a.hcErr;



		return a;
	}

    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Long id )
    {
        this.id = id ;
    }
    public Long getId()
    {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : finserv__runningbalance__c ( float8 ) 
    public void setRunningBalance( Double runningBalance )
    {
        this.runningBalance = runningBalance;
    }
    public Double getRunningBalance()
    {
        return this.runningBalance;
    }

    //--- DATABASE MAPPING : finserv__transactionsubtype__c ( varchar ) 
    public void setTransactionSubType( String transactionSubType )
    {
        this.transactionSubType = transactionSubType;
    }
    public String getTransactionSubType()
    {
        return this.transactionSubType;
    }

    //--- DATABASE MAPPING : finserv__description__c ( varchar ) 
    public void setDescription( String description )
    {
        this.description = description;
    }
    public String getDescription()
    {
        return this.description;
    }

    //--- DATABASE MAPPING : finserv__amount__c ( float8 ) 
    public void setAmount( Double amount )
    {
        this.amount = amount;
    }
    public Double getAmount()
    {
        return this.amount;
    }

    //--- DATABASE MAPPING : finserv__transactionid__c ( varchar ) 
    public void setTransactionid( String transactionid )
    {
        this.transactionid = transactionid;
    }
    public String getTransactionid()
    {
        return this.transactionid;
    }

    //--- DATABASE MAPPING : name ( varchar ) 
    public void setName( String name )
    {
        this.name = name;
    }
    public String getName()
    {
        return this.name;
    }

    //--- DATABASE MAPPING : finserv__transactiontype__c ( varchar ) 
    public void setTransactionType( String transactionType )
    {
        this.transactionType = transactionType;
    }
    public String getTransactionType()
    {
        return this.transactionType;
    }

    //--- DATABASE MAPPING : isdeleted ( bool ) 
    public void setIsdeleted( Boolean isdeleted )
    {
        this.isdeleted = isdeleted;
    }
    public Boolean getIsdeleted()
    {
        return this.isdeleted;
    }

    //--- DATABASE MAPPING : systemmodstamp ( timestamp ) 
    public void setSystemmodstamp( Date systemmodstamp )
    {
        this.systemmodstamp = systemmodstamp;
    }
    public Date getSystemmodstamp()
    {
        return this.systemmodstamp;
    }

    //--- DATABASE MAPPING : reason_for_hold__c ( varchar ) 
    public void setReasonForHold( String reasonForHold )
    {
        this.reasonForHold = reasonForHold;
    }
    public String getReasonForHold()
    {
        return this.reasonForHold;
    }

    //--- DATABASE MAPPING : finserv__postdate__c ( timestamp ) 
    public void setPostDate( Date postDate )
    {
        this.postDate = postDate;
    }
    public Date getPostDate()
    {
        return this.postDate;
    }

    //--- DATABASE MAPPING : finserv__transactionstatus__c ( varchar ) 
    public void setTransactionStatus( String transactionStatus )
    {
        this.transactionStatus = transactionStatus;
    }
    public String getTransactionStatus()
    {
        return this.transactionStatus;
    }

    //--- DATABASE MAPPING : createddate ( timestamp ) 
    public void setCreateddate( Date createddate )
    {
        this.createddate = createddate;
    }
    public Date getCreateddate()
    {
        return this.createddate;
    }

    //--- DATABASE MAPPING : finserv__transactiondate__c ( timestamp ) 
    public void setTransactionDate( Date transactionDate )
    {
        this.transactionDate = transactionDate;
    }
    public Date getTransactionDate()
    {
        return this.transactionDate;
    }

    //--- DATABASE MAPPING : finserv__financialaccount__c ( varchar ) 
    public void setFinancialAccount( String financialAccount )
    {
        this.financialAccount = financialAccount;
    }
    public String getFinancialAccount()
    {
        return this.financialAccount;
    }

    //--- DATABASE MAPPING : sfid ( varchar ) 
    public void setSfid( String sfid )
    {
        this.sfid = sfid;
    }
    public String getSfid()
    {
        return this.sfid;
    }

    //--- DATABASE MAPPING : _hc_lastop ( varchar ) 
    public void setHcLastop( String hcLastop )
    {
        this.hcLastop = hcLastop;
    }
    public String getHcLastop()
    {
        return this.hcLastop;
    }

    //--- DATABASE MAPPING : _hc_err ( text ) 
    public void setHcErr( String hcErr )
    {
        this.hcErr = hcErr;
    }
    public String getHcErr()
    {
        return this.hcErr;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(runningBalance);
        sb.append("|");
        sb.append(transactionSubType);
        sb.append("|");
        sb.append(description);
        sb.append("|");
        sb.append(amount);
        sb.append("|");
        sb.append(transactionid);
        sb.append("|");
        sb.append(name);
        sb.append("|");
        sb.append(transactionType);
        sb.append("|");
        sb.append(isdeleted);
        sb.append("|");
        sb.append(systemmodstamp);
        sb.append("|");
        sb.append(reasonForHold);
        sb.append("|");
        sb.append(postDate);
        sb.append("|");
        sb.append(transactionStatus);
        sb.append("|");
        sb.append(createddate);
        sb.append("|");
        sb.append(transactionDate);
        sb.append("|");
        sb.append(financialAccount);
        sb.append("|");
        sb.append(sfid);
        sb.append("|");
        sb.append(hcLastop);
        sb.append("|");
        sb.append(hcErr);
        return sb.toString(); 
    } 

}